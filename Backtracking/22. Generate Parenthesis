class Solution {
    private:
    bool isValidParenthesis(string s){
        int count=0;
        for(char &ch:s){
            if(ch=='('){
                count++;
            }else{
                count--;
            }
            if(count<0) return false;
        }
        return count==0;
    }
public:
    vector<string> result;
    void solve(string &curr, int n){
        if(curr.length()==2*n){
            if(isValidParenthesis(curr)) result.push_back(curr);
            return;
        }
        curr.push_back('(');
        solve(curr,n);
        curr.pop_back();
        curr.push_back(')');
        solve(curr,n);
        curr.pop_back();
    }
    vector<string> generateParenthesis(int n) {
        string curr="";
        solve(curr,n);
        return result;
    }
};
